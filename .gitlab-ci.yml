image: python:latest

cache:
  paths:
  - ~/.cache/pip/

services:
  - redis:2.8

before_script:
  - python3 -V
  - pip install -r ./requirements.txt

stages:
  - test
  - style
  - docs
  - deploy

coverage:
  stage: test
  before_script:
    - pip install -r requirements.txt
  script:
    - source ./ci/test_runner.sh
  rules:
    - if: $CI_MERGE_REQUEST_ID
  artifacts:
    paths:
      - public/coverage

pylint:
  stage: style
  before_script:
  - pip install -r ci/pylint_requirements.txt
  script:
  - ./ci/pylint_runner.sh
  artifacts:
    paths:
      - public/pylint.svg
      - public/pylint.html



#docs:
#  stage: docs
#  script:
#    - source ./ci/doc_runner.sh
#  rules:
#    - if: $CI_COMMIT_BRANCH == 'develop'


production:
  stage: deploy

  only:
    - master

  before_script:
    - apt-get install -qq git
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  environment:
    name: staging
    url: http://d-messenger.ml

  script:
    - ssh dmess@d-messenger.ml "cd dmess && source update.sh"
