image: python:latest


services:
  - redis:2.8


stages:
  - test
  - codestyle
  - docs
  - deploy


tests:
  stage: test
  before_script:
    - pip install -r ./requirements.txt
  script:
    - source ./ci/test_runner.sh
  rules:
    - if: $CI_MERGE_REQUEST_ID
  artifacts:
    paths:
      - ./public/tests.txt


codestyle:
  stage: codestyle
  before_script:
    - pip install -r ./ci/codestyle_requirements.txt
  script:
    - source ./ci/pylint_runner.sh
  rules:
    - if: $CI_MERGE_REQUEST_ID
#  artifacts:
#    paths:
#      - ./public/codestyle.txt


docs:
  stage: docs
  before_script:
    - pip install -r ./requirements.txt
  script:
    - source ./ci/doc_runner.sh
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'
  artifacts:
    paths:
      - ./public/docs.txt


production:
  stage: deploy

  only:
    - master

  before_script:
    - apt-get install -qq git
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  environment:
    name: staging
    url: http://d-messenger.ml

  script:
    - ssh dmess@d-messenger.ml "cd dmess && source update.sh"
