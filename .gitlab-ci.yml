image: python:latest


variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"


cache:
  paths:
    - .cache/pip/
    - venv


services:
  - redis:2.8


default:
  tags:
    - django
  before_script:
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements.txt


stages:
  - test
  - style
  - docs
  - deploy


coverage:
  stage: test

  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'

  script:
    - pip install -r ci/test_requirements.txt
    - celery worker -B -A dmess --loglevel=debug --concurrency=4 &
    - source ./ci/test_runner.sh
  artifacts:
    paths:
      - public/coverage


pylint:
  stage: style

  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'

  script:
    - pip install -r ci/pylint_requirements.txt
    - ./ci/pylint_runner.sh
  artifacts:
    paths:
      - public/pylint.svg
      - public/pylint.html


docs:
  stage: docs
  script:
    - pip install -r ci/docs_requirements.txt
    - source ./ci/docs_runner.sh
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'


production:
  stage: deploy

  rules:
    - if: $CI_COMMIT_BRANCH == 'master'

  before_script:
    - apt-get install -qq git
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  environment:
    name: staging
    url: http://d-messenger.ml

  script:
    - ssh dmess@d-messenger.ml "cd dmess && source update.sh"
